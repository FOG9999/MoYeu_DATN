
/*
 * This code was generated by ojc.
 */
import GeneticAlgorithm.InstrumentCode.*;
import java.util.*;


public class Triangle
{

    int side1;

    int side2;

    int side3;

    public Triangle( int side1, int side2, int side3 )
    {
        super();
        trace.add( new java.lang.Integer( 1 ) );
        this.side1 = side1;
        this.side2 = side2;
        this.side3 = side3;
    }

    public Triangle( int side1, int side2 )
    {
        super();
        trace.add( new java.lang.Integer( 2 ) );
        this.side1 = side1;
        this.side2 = side2;
        this.side3 = side2;
    }

    public Triangle( int side1 )
    {
        super();
        trace.add( new java.lang.Integer( 3 ) );
        this.side1 = side1;
        this.side2 = side1;
        this.side3 = side1;
    }

    public Triangle()
    {
        super();
        trace.add( new java.lang.Integer( 4 ) );
    }

    public void checkTriangle( int a, int b, int[] c )
    {
        trace.add( new java.lang.Integer( 5 ) );
        System.out.println( a + b );
    }

    
    static java.util.Set trace = new java.util.HashSet();

    
    public static void newTrace()
    {
        trace = new java.util.HashSet();
    }

    
    public static java.util.Set getTrace()
    {
        return trace;
    }

}
